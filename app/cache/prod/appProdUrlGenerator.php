<?php

use Symfony\Component\Routing\RequestContext;
use Symfony\Component\Routing\Exception\RouteNotFoundException;
use Psr\Log\LoggerInterface;

/**
 * appProdUrlGenerator
 *
 * This class has been auto-generated
 * by the Symfony Routing Component.
 */
class appProdUrlGenerator extends Symfony\Component\Routing\Generator\UrlGenerator
{
    private static $declaredRoutes = array(
        'ijvr_search_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'IJVR\\SearchBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/search/index',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ijvr_minimal_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'IJVR\\SearchBundle\\Controller\\DefaultController::minimalSearchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/search/minimal_search',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ijvr_search_single_article' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'IJVR\\SearchBundle\\Controller\\DefaultController::singleArticleAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/search/singleArticle',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ijvr_search_issue' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'IJVR\\SearchBundle\\Controller\\DefaultController::searchForIssueFromAContainingArticleAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/search/issue_search',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ijvr_search_criteria' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'IJVR\\SearchBundle\\Controller\\DefaultController::findArticlesByCriteriaAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/search/criteria_search',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ijvr_go_to_advanced_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'IJVR\\SearchBundle\\Controller\\DefaultController::advancedSearchViewAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/search/advancedsearchview',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ijvr_advanced_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'IJVR\\SearchBundle\\Controller\\DefaultController::advancedSearchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/search/advancedsearch',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ijvr_issue_content' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'IJVR\\SearchBundle\\Controller\\DefaultController::searchForIssueFromAContainingArticleAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/search/issuecontent',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ijvr_publish_homepage' => array (  0 =>   array (    0 => 'name',  ),  1 =>   array (    '_controller' => 'IJVR\\PublishBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'name',    ),    1 =>     array (      0 => 'text',      1 => '/publish/hello',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ijvr_publish_index' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'IJVR\\PublishBundle\\Controller\\DefaultController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/publish/index',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ijvr_publish_guide' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'IJVR\\PublishBundle\\Controller\\DefaultController::guideAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/publish/guide',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ijvr_publish_submit' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'IJVR\\PublishBundle\\Controller\\DefaultController::submitAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/publish/submit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ijvr_publish_validation' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'IJVR\\PublishBundle\\Controller\\DefaultController::validationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/publish/validation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'moderation' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'IJVR\\UserBundle\\Controller\\LienLoginController::moderationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/moderation',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'issue_publish' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'IJVR\\UserBundle\\Controller\\LienLoginController::publish_issueAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/publish_issue',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'dashboard' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'IJVR\\UserBundle\\Controller\\LienLoginController::dashboardAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/dashboard',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'gestion' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'IJVR\\UserBundle\\Controller\\LienLoginController::gestionAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/gestion',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'donne_admin' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'IJVR\\UserBundle\\Controller\\LienLoginController::donneadminAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/donne_droits_admin',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'retire_admin' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'IJVR\\UserBundle\\Controller\\LienLoginController::retireadminAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/retire_droits_admin',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'being_read' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'IJVR\\UserBundle\\Controller\\LienLoginController::beingReadAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/being_read',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'correction_to_make' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'IJVR\\UserBundle\\Controller\\LienLoginController::correction_to_makeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/correction_to_make',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'waiting_to_publish' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'IJVR\\UserBundle\\Controller\\LienLoginController::waitingAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/waiting',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'rejected' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'IJVR\\UserBundle\\Controller\\LienLoginController::rejectedAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/rejected',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'published' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'IJVR\\UserBundle\\Controller\\LienLoginController::publishedAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/admin/published',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'approuvercommentaire' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'YWPPlatformBundle:Post:approuvercommentaire',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/approuver/commentaire',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\SecurityController::loginAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_check' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\SecurityController::checkAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login_check',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_security_logout' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\SecurityController::logoutAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/logout',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_profile_show' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'IJVR\\UserBundle\\Controller\\ProfileController::showAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_profile_edit' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'IJVR\\UserBundle\\Controller\\ProfileController::editAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/edit',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_register' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::registerAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::checkEmailAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/check-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_confirm' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::confirmAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/register/confirm',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_registration_confirmed' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::confirmedAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/confirmed',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_request' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::requestAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/request',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_send_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::sendEmailAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/send-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::checkEmailAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/check-email',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_resetting_reset' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::resetAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/resetting/reset',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'fos_user_change_password' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ChangePasswordController::changePasswordAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/change-password',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ijvr_platform_view' => array (  0 =>   array (    0 => 'id',  ),  1 =>   array (    '_controller' => 'IJVR\\PlatformBundle\\Controller\\DefaultController::viewAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'id',    ),    1 =>     array (      0 => 'text',      1 => '/platform/article',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'oc_platform_view_slug' => array (  0 =>   array (    0 => 'year',    1 => 'slug',    2 => 'format',  ),  1 =>   array (    '_controller' => 'IJVR\\PlatformBundle\\Controller\\DefaultController::viewSlugAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '.',      2 => '[^/]++',      3 => 'format',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'slug',    ),    2 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'year',    ),    3 =>     array (      0 => 'text',      1 => '/platform',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ijvr_platform_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'IJVR\\PlatformBundle\\Controller\\DefaultController::homeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/platform/home',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ijvr_platform_contact' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'IJVR\\PlatformBundle\\Controller\\DefaultController::contactAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/platform/contact',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ijvr_platform_sendMail' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'IJVR\\PlatformBundle\\Controller\\DefaultController::sendMailAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/platform/sendMail',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'ijvr_platform_about' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'IJVR\\PlatformBundle\\Controller\\DefaultController::aboutAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/platform/about',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
        'base' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'IJVR\\UserBundle\\Controller\\LienLoginController::redirectAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),  5 =>   array (  ),),
    );

    /**
     * Constructor.
     */
    public function __construct(RequestContext $context, LoggerInterface $logger = null)
    {
        $this->context = $context;
        $this->logger = $logger;
    }

    public function generate($name, $parameters = array(), $referenceType = self::ABSOLUTE_PATH)
    {
        if (!isset(self::$declaredRoutes[$name])) {
            throw new RouteNotFoundException(sprintf('Unable to generate a URL for the named route "%s" as such route does not exist.', $name));
        }

        list($variables, $defaults, $requirements, $tokens, $hostTokens, $requiredSchemes) = self::$declaredRoutes[$name];

        return $this->doGenerate($variables, $defaults, $requirements, $tokens, $parameters, $name, $referenceType, $hostTokens, $requiredSchemes);
    }
}
